<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "tbl_billing_temp".
 *
 * @property int $id AI and primary key
 * @property int $file_uploaded_id File uploaded id
 * @property int $sp_system_id SP system id
 * @property int $payer 1-Other;3-Student
 * @property string $payer_name Name of the payer
 * @property double $bill_amount billed amount
 * @property string $bill_exp_date bill expire date
 * @property string $bill_description bill description
 * @property string $bill_gen_by bill generated by
 * @property string $bill_appr_by bill approved by
 * @property string $payer_cell_num payer cell phone number
 * @property string $payer_email payer email address
 * @property string $bill_currency Bill Currency
 * @property int $payment_type_id Payment type id
 * @property string $bill_gen_date bill generated date
 * @property string $bill_id bill id
 * @property string $control_number control number for payment
 * @property int $bill_pay_opt Bill Payment Options 1-full,2-partial,3-Exactly
 * @property string $use_on_pay Use item reference on pay N-No, Y-Yes
 * @property double $bill_eqv_amount Equivalent amount applicable on none TZS
 * @property string $bill_item_ref Bill item reference
 * @property int $year_id academic year
 * @property int $is_deleted 1-Ok 2-Deleted
 * @property int $status 1-Uploaded,2-Verified,3-Approved and billed
 * @property string $created_at Created at
 * @property string $updated_at Uploaded at
 *
 * @property TblPaymentTypes $paymentType
 */
class TblBillingTemp extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'tbl_billing_temp';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['file_uploaded_id', 'payer_name', 'bill_amount', 'bill_exp_date', 'bill_description', 'bill_gen_by', 'bill_currency', 'payment_type_id', 'bill_gen_date', 'bill_pay_opt', 'use_on_pay', 'bill_eqv_amount', 'bill_item_ref', 'status'], 'required'],
            [['file_uploaded_id', 'sp_system_id', 'payer', 'payment_type_id', 'bill_pay_opt', 'year_id', 'is_deleted', 'status'], 'integer'],
            [['bill_amount', 'bill_eqv_amount'], 'number'],
            [['created_at', 'updated_at'], 'safe'],
            [['payer_name', 'bill_description', 'payer_email'], 'string', 'max' => 200],
            [['bill_exp_date', 'bill_gen_date'], 'string', 'max' => 20],
            [['bill_gen_by', 'bill_appr_by'], 'string', 'max' => 50],
            [['payer_cell_num', 'bill_id', 'bill_item_ref'], 'string', 'max' => 100],
            [['bill_currency'], 'string', 'max' => 5],
            [['control_number'], 'string', 'max' => 12],
            [['use_on_pay'], 'string', 'max' => 1],
            [['payment_type_id'], 'exist', 'skipOnError' => true, 'targetClass' => TblPaymentTypes::className(), 'targetAttribute' => ['payment_type_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'file_uploaded_id' => 'File Uploaded ID',
            'sp_system_id' => 'Sp System ID',
            'payer' => 'Payer',
            'payer_name' => 'Payer Name',
            'bill_amount' => 'Bill Amount',
            'bill_exp_date' => 'Bill Exp Date',
            'bill_description' => 'Bill Description',
            'bill_gen_by' => 'Bill Gen By',
            'bill_appr_by' => 'Bill Appr By',
            'payer_cell_num' => 'Payer Cell Num',
            'payer_email' => 'Payer Email',
            'bill_currency' => 'Bill Currency',
            'payment_type_id' => 'Payment Type',
            'bill_gen_date' => 'Bill Gen Date',
            'bill_id' => 'Bill ID',
            'control_number' => 'Control Number',
            'bill_pay_opt' => 'Bill Pay Opt',
            'use_on_pay' => 'Use On Pay',
            'bill_eqv_amount' => 'Bill Eqv Amount',
            'bill_item_ref' => 'Bill Item Ref',
            'year_id' => 'Year ID',
            'is_deleted' => 'Is Deleted',
            'status' => 'Status',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }

    public static function getStatus($status)
    {

        switch ($status) {

            default:
            case 1:
                $status_message = 'Uploaded';
                break;
            case 2:
                $status_message = 'Verified';
                break;
            case 3:
                $status_message = 'Approved & Billed';
                break;

        }

        return $status_message;
    }

    public static function unverifiedBills($uploaded_file_id){

        return TblBillingTemp::find()->where(['file_uploaded_id'=>$uploaded_file_id])->andWhere(['status'=>1])->andWhere(['is_deleted'=>1])->count();

    }

    public static function unApprovedBills(){

        return TblBillingTemp::find()->where(['status'=>2])->count();

    }


    public static function getStatuMessages()
    {

        return [
            [
                'id' => '1',
                'name' => 'Uploaded'
            ],
            [
                'id' => '2',
                'name' => 'Verified'
            ],
            [
                'id' => '3',
                'name' => 'Approved & Billed'
            ],
        ];


    }


    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPaymentType()
    {
        return $this->hasOne(TblPaymentTypes::className(), ['id' => 'payment_type_id']);
    }
}
